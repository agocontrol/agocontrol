[system]
uuid=00000000-0000-0000-000000000000

# mqtt or qpid
messaging=qpid

# address to broker, hostname[:port]
broker=localhost

# when you change username and/or password, you also need to adjust the qpid sasl db to reflect the change
username=agocontrol
password=letmein


units=SI

# Please see http://wiki.agocontrol.com/index.php/Logging for more details on Logging
# log methods: console, syslog
log_method=syslog
# log levels: TRACE, DEBUG, INFO, WARNING, ERROR, FATAL
log_level=INFO

[loggers]
# The main log_level controls the overall logging level.
# It is then possible to limit different loggers (python) / channels (C++) to a higher level.
# For example, if log_level is set to INFO, nothing lower than INFO will be logged,
# even if a specific logger is set to TRACE.

# Names are shared between both python & C++ implementations (where applicable).

# The low-level qpid python library is very verbose, so do not log anything lower
# than INFO from that library:
qpid=INFO

# Same goes for low-level mqtt library, both on C++ and Python. Cap it to INFO.
mqtt=INFO

# The following are internal application logging in the AgoClient library
# transport is the abstraction of the MQTT/QPID connectivity, and only deals with simple messaging.
transport = TRACE

# connection is a higher-level interface between each application and the transport
connection = TRACE

# This is the "main" logger for C++, if no specific one is used. It is also the default for all applications.
app = TRACE

# AgoRPC is pretty verbose with low-level debugging in TRACE mode.
httpd = DEBUG